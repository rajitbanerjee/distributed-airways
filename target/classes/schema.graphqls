schema {
    query: Query
    mutation: Mutation
}

type Flight {
    id: ID!
    airline: String
    flightNumber: String
    time: String
    sourceCity: String
    destinationCity: String
    sourceAirport: String
    destinationAirport: String
    dayOfWeek: String
    price: Float
    category: String

    # id: ID!
    # airline: String
    # flightNumber: [String]
    # time: [String]
    # sourceCity: String
    # destinationCity: String
    # sourceAirport: String
    # destinationAirport: String
    # dayOfWeek: [String]
    # price: [Float]
    # # category: [String]
}

type Query {
    allFlights: [Flight]
    availableFlights(sourceCity: String): [Flight]
    availableFlightsAll(sourceCity: String, destinationCity: String, dayOfWeek: String): [Flight]
}

type Mutation {
    createFlight(input: CreateFlightInput!) : Flight!
}

input CreateFlightInput {
    id: ID!
    airline: String
    flightNumber: String
    time: String
    sourceCity: String
    destinationCity: String
    sourceAirport: String
    destinationAirport: String
    dayOfWeek: String
    price: Float
    category: String
}